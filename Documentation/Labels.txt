
//-----------------------------------------------------------------
h2	Label definitions
	label

p	Any name which starts in the first column and is not an assembler directive (which always starts with a hash '#') or a comment (which always starts with a semicolon ';') is treated as a label definition.

p	Maximum length for label names is 9 characters. (v.3.0.16) The label name may be followed by a colon ':'. The assembler has no upper limit for the number of labels.

p	There a three different types:

ul
li	defl and equ pseudo instructions assign a calculated value to a name.

li	The data pseudo instruction assigns the next address from the #data segment to the name and increments the data pointer by the given size.

li	Any label which is not followed by one of the above pseudo instructions, assigns the logical address of the current instruction to it's name. The logical address may be different from the physical address, if you have used the org pseudo instruction or if the #code segment did not start at address $0000. These labels are commonly used to mark target points for jumps, branches and subroutine calls.

h5	Examples for label definitions:

pre	zahl1	equ		55			; constant "zahl1"  =  55
	Hogo:	defl	$+22		; constant "Hogo"   =  address of current instruction +22
	Toto	data	4			; reserves 4 bytes from the #data segment for variable "Toto"
	loop1	jp		gaga		; label "loop1"     =  address of current instruction
	gaga:	jr		loop1		; label "gaga"      =  address of current instruction


