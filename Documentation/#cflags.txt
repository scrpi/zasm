//-----------------------------------------------------------------
h3	#cflags

pre	#cflags $CFLAGS --std-c99

p	The #cflags directive is used to add or modify the command line options passed to the c compiler.

p	By default zasm calls sdcc, the default c compiler, with the following two options: –mz80 and –S. This selects the z80 code generator in sdcc and tells it not to do anything more than just compile the c source into assembler source. This is where zasm will snatch the output file and handle everything else.

p	If zasm itself was called with command line option -I, then it passes this headers include path to sdcc as well and secretly adds one more option: -mz80 -S --nostdinc -I/path/to/include.

p	Finally zasm will add the output file and the source file when it processes the #include directive. So the resulting call looks like:

pre	/usr/bin/sdcc -mz80 -S --nostdinc -I/path/to/include -o /path/to/outfile.s /path/to/sourcefile.c

p	The output file will be in a subdirectory in the tempdir which was set with command line option -t. (or default position.)

p	This can be tweaked with Directive #cflags:

p	#cflags replaces the current flags with your own flags. If you just want to add one more option, which is most common, then you can include all previous options with $CFLAGS.

p	If the source and output file path must be passed somehow different, then you can add options $SOURCE and $DEST, which will be replaced with the source and output file path later.

p	If you add a headers directory, that is, if you add an option -I, then the path is validated by zasm, so you get an error here and not later from sdcc.

h5	Useful options for sdcc:

pre		-Dname[=value]        	Define macro
		-Ipath                	Add to the header include path
		--nostdinc            	Do not include the standard directory in the #include search path
		--Werror              	Treat warnings as errors
		--std-c89             	Use C89 standard (slightly incomplete)
		--std-sdcc89          	Use C89 standard with SDCC extensions (this is the default)
		--std-c99             	Use C99 standard (incomplete)
		--std-sdcc99          	Use C99 standard with SDCC extensions
		--funsigned-char      	Make "char" unsigned by default


